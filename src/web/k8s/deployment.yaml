apiVersion: apps/v1
kind: Deployment
metadata:
  name: qasa-web
  labels:
    app: qasa-web
spec:
  replicas: 3
  selector:
    matchLabels:
      app: qasa-web
  template:
    metadata:
      labels:
        app: qasa-web
    spec:
      containers:
      - name: qasa-web
        image: qasa-web:latest
        ports:
        - containerPort: 8080
          name: web
        - containerPort: 9000
          name: p2p
        env:
        - name: QASA_WEB_PORT
          value: "8080"
        - name: QASA_NETWORK_PORT
          value: "9000"
        - name: QASA_ENABLE_MDNS
          value: "true"
        - name: QASA_ENABLE_DHT
          value: "true"
        volumeMounts:
        - name: qasa-data
          mountPath: /home/qasa/.qasa
        - name: qasa-config
          mountPath: /app/config
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/status
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/status
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: qasa-data
        persistentVolumeClaim:
          claimName: qasa-data-pvc
      - name: qasa-config
        configMap:
          name: qasa-config
---
apiVersion: v1
kind: Service
metadata:
  name: qasa-web-service
  labels:
    app: qasa-web
spec:
  selector:
    app: qasa-web
  ports:
  - name: web
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: p2p
    port: 9000
    targetPort: 9000
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qasa-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: qasa-config
data:
  config.yaml: |
    web:
      port: 8080
      cors_origins: ["*"]
    network:
      port: 9000
      enable_mdns: true
      enable_dht: true
    security:
      require_auth: true
      max_connections: 100 